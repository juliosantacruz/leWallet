import Head from "next/head";
import { Inter } from "next/font/google";
import CardSummary from "../components/CardSummary/CardSummary";
import AddButton from "@/components/AddButton/AddButton";
import AddExpenseForm from "@/components/AddExpenseForm/AddExpenseForm";
import CardItem from "@/components/CardItem/CardItem";
import { useExpensesStore } from "@/store/expenses-store";
import { Expense } from "@/types/expense";
import useGetStore from "@/hooks/useGetStore";
import { CardSummaryProps } from "@/types/CardSummary";
import { v4 } from "uuid";
import AddIncomeForm from "@/components/AddIncomeForm/AddIncomeForm";
import { useState } from "react";
import { Modal } from "antd";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const [isModalOpen, setIsModalOpen] = useState(false);
  const expensesList: any = useGetStore(
    useExpensesStore,
    (state: any) => state.expenses
  );
  const setMonthYear = (element: Expense) => {
    const expenseMonth = parseInt(element.date.split("-", 2)[1]);
    const expenseYear = parseInt(element.date.split("-", 2)[0]);
    return expenseYear + "-" + expenseMonth;
  };
  const monthExpenses: string[] = [];
  expensesList?.forEach((element: Expense) => {
    if (!monthExpenses.includes(setMonthYear(element))) {
      monthExpenses.push(setMonthYear(element));
    }
  });

  const showModal = () => {
    setIsModalOpen(true);
  };

  const handleOk = () => {
    setIsModalOpen(false);
  };

  const handleCancel = () => {
    setIsModalOpen(false);
  };
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="">
        <h1>Gastos y Presupuestos</h1>

        {monthExpenses?.map((element: string) => {
          return <CardSummary key={v4()} dateCard={element} />;
        })}

        {/* {expensesList?.map((element: Expense) => {
          return <CardItem key={element.id} data={element} />;
        })} */}
        <Modal
          title="Basic Modal"
          open={isModalOpen}
          onOk={handleOk}
          onCancel={handleCancel}
          footer={null}
        >
          <AddExpenseForm />
        </Modal>
        <AddButton isModalOpen={isModalOpen} setIsModalOpen={setIsModalOpen}/>
        <AddIncomeForm />
        
      </main>
    </>
  );
}
